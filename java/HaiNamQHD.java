public class HaiNamQHD {

    static int N;
    static int M;
    static int X[][];
    static int F[][];

    static void getMaxNam(){
        F = new int[N+1][M+1];
        for(int i = 0; i<N +1;i++){
            F[i][0] = -9999;
        }
        for(int i = 0; i< M+1;i++){
            F[0][i] = -9999;
        }
        F[0][0] = 0;
        for(int i = 1;i< N +1;i++){
            for(int j = 1; j < M + 1;j++){
                if(X[i][j] == -1){
                    F[i][j] = -9999;
                }else {
                    F[i][j] = Math.max(Math.max(F[i-1][j], F[i][j-1]), F[i-1][j-1]) + X[i][j];
                }
            }
        }
    }


    public static void main(String[] args) {
        int tg[][] = {
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,-1,4,8,-1,0,-1,-1,0,0,0,0,0,0,0,-1,3,-1,9,0,0,0,9,0,0,0,0,-1,0,0,0,0,11,18,-1,-1,0,7,0,0,0,13,2,18,1,5,0,14,-1,1,6,1,0,0,0,0,0,0,-1,0,-1,0,-1,18,7,0,-1,0,0,11,0,0,-1,0,0,0,15,0},
                {0,0,-1,0,0,-1,0,0,4,0,0,5,-1,10,0,0,12,0,0,7,0,0,3,0,0,14,-1,0,-1,0,0,3,0,0,0,-1,-1,7,0,-1,-1,0,9,0,0,0,16,-1,0,0,15,0,-1,0,15,0,4,-1,0,0,0,0,-1,17,-1,0,14,0,17,10,0,0,0,13,11,0,-1,0,0,0,0,17,0,0},
                {0,0,-1,0,0,0,0,0,-1,0,8,0,0,8,-1,0,0,3,7,0,-1,-1,5,0,9,16,0,0,0,-1,12,0,0,0,0,0,-1,5,0,0,18,-1,0,0,0,0,0,0,0,0,14,0,10,7,9,19,0,0,0,0,-1,0,0,5,0,-1,7,15,0,-1,0,-1,0,-1,-1,0,0,0,0,11,13,0,-1,0},
                {0,0,15,0,0,-1,0,-1,0,0,12,-1,0,16,0,4,0,0,15,0,0,-1,10,16,-1,16,10,10,7,3,0,0,0,0,0,2,0,0,6,0,0,-1,0,0,0,0,-1,0,0,3,0,-1,-1,-1,0,0,0,0,0,0,11,0,0,0,0,0,-1,0,-1,-1,0,0,0,2,8,7,0,9,0,0,0,0,0,2},
                {0,-1,0,0,0,14,18,0,0,-1,0,0,3,3,0,-1,0,0,0,0,0,19,0,-1,0,0,-1,0,0,0,0,-1,0,0,0,5,-1,6,0,0,-1,0,0,1,-1,-1,0,11,-1,0,0,0,0,19,14,4,-1,0,14,0,0,0,-1,12,0,18,-1,-1,-1,0,0,0,18,-1,0,0,0,0,16,0,-1,0,-1,0},
                {0,0,6,0,4,-1,11,0,-1,0,7,3,-1,0,15,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,-1,0,0,-1,0,0,0,1,0,0,12,9,0,0,0,1,0,0,-1,0,0,0,-1,-1,-1,0,-1,0,0,-1,-1,0,12,0,0,0,18,19,19,0,0,-1,0,-1,0,0,11,0,0,0,0,0,0,0},
                {0,7,0,-1,7,13,6,-1,-1,16,0,0,-1,4,0,-1,13,0,0,12,11,0,-1,-1,17,0,0,11,0,0,0,0,0,14,0,-1,-1,14,1,19,0,11,0,0,0,0,0,0,0,19,0,0,6,0,0,6,0,0,0,-1,0,0,0,12,0,10,2,5,0,17,0,7,0,4,0,-1,0,19,0,-1,7,4,0,10},
                {0,0,0,15,-1,0,0,-1,10,-1,3,0,0,0,0,0,-1,0,0,-1,0,0,-1,7,0,0,0,0,3,0,6,-1,0,0,0,0,-1,-1,19,-1,13,4,0,7,0,-1,-1,-1,0,-1,0,16,0,0,-1,0,0,0,7,0,16,0,0,0,17,0,0,0,-1,6,0,0,0,0,0,-1,0,-1,3,-1,0,-1,0,6},
                {0,0,0,0,5,18,-1,0,0,0,-1,-1,0,0,0,0,6,18,18,0,0,0,9,0,0,0,0,2,6,0,0,0,-1,0,0,0,13,16,0,-1,0,-1,0,0,-1,0,13,0,0,0,12,4,0,0,0,0,3,0,0,-1,-1,0,0,0,1,19,0,0,0,0,0,0,0,0,18,18,-1,0,-1,0,5,0,0,14},
                {0,0,0,0,0,0,14,13,0,0,0,0,0,0,11,0,0,0,-1,0,14,0,0,0,11,-1,0,3,0,-1,0,0,0,-1,0,0,0,0,0,0,-1,0,0,19,13,6,0,0,19,0,0,0,0,13,0,0,0,0,0,14,-1,7,-1,0,3,0,0,0,0,17,0,0,7,-1,5,0,2,0,0,0,13,6,0,0},
                {0,0,0,0,0,0,0,18,0,0,-1,0,0,0,12,0,18,0,12,0,0,-1,10,0,0,0,0,0,19,0,0,0,0,0,18,12,0,0,0,10,0,0,2,17,3,1,6,0,0,6,0,0,11,19,15,5,16,0,0,1,9,12,2,3,0,0,0,0,-1,0,0,19,-1,17,17,0,-1,6,15,4,-1,0,-1,-1},
                {0,-1,3,0,5,-1,0,16,0,0,0,0,-1,0,0,0,0,4,-1,-1,0,8,13,0,0,0,-1,0,-1,-1,0,0,0,0,2,-1,0,0,0,0,0,15,0,0,-1,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,19,3,0,0,0,0,0,0,0,4,0,0,18,0,13,0,13,0,0,9,3,0},
                {0,-1,2,0,0,0,0,0,8,0,-1,0,-1,-1,-1,-1,0,-1,0,-1,-1,0,11,0,3,9,-1,-1,8,2,-1,-1,0,8,10,5,0,0,19,0,0,0,0,0,0,-1,-1,10,16,-1,-1,0,0,0,-1,3,0,-1,0,0,2,3,0,-1,-1,0,14,0,0,0,-1,0,0,0,-1,10,0,-1,0,0,13,0,3,16},
                {0,0,0,7,7,0,0,11,0,0,-1,0,0,5,0,0,0,0,0,1,0,0,1,0,-1,0,0,1,-1,0,0,0,3,0,0,0,-1,0,18,0,0,1,0,0,16,0,15,0,-1,5,0,0,0,-1,4,0,-1,15,-1,0,7,0,17,0,-1,-1,10,0,0,0,0,0,0,0,0,9,7,0,4,2,13,12,6,0},
                {0,-1,19,0,19,0,0,0,4,0,-1,0,0,-1,11,17,0,0,14,0,0,10,0,12,0,0,5,-1,0,-1,0,0,1,14,5,12,0,0,9,5,0,-1,0,0,0,0,18,0,-1,17,3,-1,0,0,0,0,-1,-1,0,-1,-1,5,0,0,9,-1,0,0,3,0,0,0,-1,0,2,0,0,0,0,0,0,7,-1,3},
                {0,6,0,-1,0,0,1,0,0,3,0,0,0,0,3,12,0,0,0,0,13,0,14,4,0,9,0,0,-1,0,0,0,0,-1,0,0,0,-1,4,8,0,0,11,0,0,0,9,11,11,0,0,17,0,0,0,-1,0,-1,0,7,17,0,0,18,0,1,16,0,2,0,0,0,-1,0,-1,0,0,0,0,0,-1,0,0,7},
                {0,0,0,10,0,0,0,7,0,4,-1,0,16,0,0,0,0,-1,0,0,0,0,0,0,0,15,14,0,0,0,0,0,12,10,-1,-1,14,0,-1,0,0,16,0,-1,0,0,0,12,0,0,0,14,0,0,0,7,0,0,0,0,0,-1,0,7,-1,0,0,0,0,0,1,0,0,0,19,0,9,-1,-1,0,0,15,9,-1},
                {0,8,-1,0,-1,-1,0,0,-1,0,-1,-1,-1,18,0,0,-1,0,0,0,0,0,3,13,2,14,2,0,19,-1,9,-1,18,0,0,0,0,17,0,0,0,-1,-1,0,0,0,0,17,-1,0,2,0,15,0,0,0,0,-1,0,0,4,0,0,0,-1,-1,0,11,4,3,0,10,-1,0,0,-1,8,0,0,5,9,0,0,0},
                {0,-1,0,17,0,15,0,0,0,0,0,0,0,14,0,0,0,0,0,0,13,0,0,0,0,-1,0,0,0,5,0,0,-1,0,0,0,0,0,0,0,1,17,6,0,14,0,0,0,0,0,-1,0,0,16,0,0,2,-1,0,19,0,11,-1,0,0,0,0,0,-1,0,-1,0,0,18,-1,-1,0,7,0,0,-1,0,16,0},
                {0,13,13,15,0,13,19,-1,5,18,0,0,0,0,0,10,0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,12,-1,0,-1,5,0,-1,0,8,0,0,0,-1,-1,0,7,0,13,0,3,0,-1,7,0,0,-1,1,15,0,0,14,0,0,18,0,0,0,0,0,0,0,-1,-1,0,0,0,0,-1,10,0,0,0,0,0},
                {0,15,18,18,0,-1,9,4,0,-1,0,0,0,0,9,0,0,0,-1,0,4,0,0,6,0,0,19,0,-1,0,17,9,13,0,0,18,11,18,0,15,5,-1,0,11,0,-1,0,0,15,0,8,-1,0,7,-1,-1,0,9,0,0,0,0,-1,4,-1,-1,0,0,0,-1,0,16,19,0,0,7,1,0,0,0,3,0,0,0},
                {0,0,1,1,4,0,0,7,6,8,0,2,12,9,-1,16,0,0,0,18,0,12,-1,8,0,0,0,0,12,14,-1,-1,-1,-1,0,0,0,2,5,-1,0,15,0,19,0,-1,0,0,11,5,-1,0,2,-1,0,9,0,0,7,0,0,0,0,-1,0,0,14,0,0,17,5,15,0,0,7,0,0,0,0,3,0,13,13,9},
                {0,0,0,0,18,-1,0,0,0,0,7,0,0,0,0,3,0,0,11,-1,0,0,0,0,0,2,0,8,3,0,6,-1,0,0,0,0,0,-1,0,5,14,0,14,0,13,0,-1,15,0,0,-1,0,-1,13,15,10,12,1,6,-1,-1,0,0,0,10,0,15,0,0,-1,-1,0,18,0,-1,-1,-1,0,0,1,-1,0,0,0},
        };
        X = tg;
        N = 23;
        M = 83;
        getMaxNam();
        for(int i = 0; i < N + 1;i++){
            for(int j =0;j < N+1;j++){
                System.out.print(X[i][j] + "   ");
            }
            System.out.println();
        }
        System.out.println(F[N][M]);
    }
}
